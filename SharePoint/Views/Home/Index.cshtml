<div id="songsGrid"></div>

<script>

    $(document).ready(function () {
        var dataSource = new kendo.data.DataSource({
            transport: {
                read: function (options) {
                    $.ajax({
                        url: "@Url.Action("GetSongs","Sharepoint")",
                        dataType: "json",
                        cache: false,
                        success: function (result) {
                            options.success(result);
                        },
                        error: function (data) {
                            alert(data.responseText);
                        }
                    });
                },
                create: function (options) {
                    options.data.Id = 0;
                    var dataModel = JSON.stringify(options.data);

                    if (validateDate(options.data.ReleaseDate)) {
                        $.ajax({
                        url: "@Url.Action("CreateSong", "Sharepoint")",
                        type: "post",
                        dataType: "json",
                        contentType: "application/json; charset=utf-8",
                        cache: false,
                        data: dataModel,
                        complete: function (data) {
                            $("#songsGrid").data("kendoGrid").dataSource.read();
                        },
                        error: function (data) {
                            alert(data.responseText);
                            $("#songsGrid").data("kendoGrid").dataSource.read();
                        },
                        });
                    } else {
                        $("#songsGrid").data("kendoGrid").dataSource.read();
                    }

                },
                update: function (options) {
                    var dataModel = JSON.stringify(options.data);

                    if (validateDate(options.data.ReleaseDate)) {
                        $.ajax({
                        url: "@Url.Action("UpdateSong", "Sharepoint")",
                        dataType: "json",
                        contentType: "application/json; charset=utf-8",
                        type: "put",
                        cache: false,
                        data: dataModel,
                        complete: function (data) {
                            debugger;
                            $("#songsGrid").data("kendoGrid").dataSource.read();
                        },
                        error: function (data) {
                            alert(data.responseText);
                            $("#songsGrid").data("kendoGrid").dataSource.read();
                        },
                        parameterMap: function (options, operation) {
                            if (operation !== "read" && options.models) {
                                return { models: kendo.stringify(options.models) };
                            }
                        }
                        });
                    } else {
                        $("#songsGrid").data("kendoGrid").dataSource.read();
                    }
                },
                destroy: function (options) {
                    var dataModel = JSON.stringify(options.data);
                    $.ajax({
                        url: "@Url.Action("DeleteSong", "Sharepoint")",
                        dataType: "json",
                        contentType: "application/json; charset=utf-8",
                        type: "delete",
                        cache: false,
                        data: dataModel,
                        complete: function (data) {
                            $("#songsGrid").data("kendoGrid").dataSource.read();
                        },
                        error: function (data) {
                            alert(data.responseText);
                            $("#songsGrid").data("kendoGrid").dataSource.read();
                        }
                    });
                }
            },
            schema: {
                model: {
                    id: "Id",
                    fields: {
                        //Id: { type: "number", editable: false },
                        Title: { type: "string", editable: true, validation: { required: true } },
                        Author: { type: "string", editable: true, validation: { required: true } },
                        ReleaseDate: { type: "string", editable: true, validation: { required: true } },
                    }
                }
            },
        });

        $("#songsGrid").kendoGrid({
            dataSource: dataSource,
            editable: "popup",
            groupable: true,
            pageable: {
                refresh: true,
                pageSizes: true,
                buttonCount: 5
            },
            sortable: true,
            filterable: true,
            height: 500,
            edit: function (e) {
                e.container.find("input:first").prop('disabled', true);
            },
            toolbar: ["create"],
            columns: [{
                field: "Id",
                title: "ID",
                width: 160
            }, {
                field: "Title",
                width: 160,
            }, {
                field: "Author",
                title: "Author",
                width: 200,
            }, {
                field: "ReleaseDate",
                title: "Release Date (mm.yyyy)"
            }, { command: ["edit", "destroy"], title: "&nbsp;", width: "200px" }]

        }).data("kendoGrid");

        var validator = $("#songsGrid").kendoValidator().data("kendoValidator");
        $("button").click(function () {
            if (!validator.validateInput($("input[name=username]"))) {
                alert("UserName is not valid!");
            } else {
                alert("UserName is valid!");
            }
        });
    });

    function validateDate(date) {
        if (date != null || date != undefined) {
            debugger;
            var a = date.split(".");
            if (a.length < 2) {
                alert("Enter a valid month & year in (mm.yyyy) format");
                return false;
            }
            if (a[0] < 1 || a[0] > 12) {
                alert("Enter a valid month between (01 - 12)");
                return false;
            }
            if (a[1] < 1900 || a[1] > 2022) {
                alert("Enter a valid year between (1900 - 2022)");
                return false;
            }
        }
        return true;
    }
</script>